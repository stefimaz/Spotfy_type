{"ast":null,"code":"var _jsxFileName = \"/Users/stephanemasyn/Desktop/FinTech/GitHub/Spotfy_type/src/components/AudioPlayer.js\",\n    _s = $RefreshSig$();\n\nimport useAudio from \"../hooks/useAudio\";\nimport { Slider } from \"antd\";\nimport { useIPFS } from \"../hooks/useIPFS\";\nimport \"./AudioPlayer.css\";\nimport { SoundOutlined, StepBackwardOutlined, StepForwardOutlined, PlayCircleFilled, PauseCircleFilled } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Player = _ref => {\n  _s();\n\n  let {\n    url\n  } = _ref;\n  const {\n    resolveLink\n  } = useIPFS();\n  const [playing, duration, toggle, toNextTrack, toPrevTrack, trackProgress, onSearch, onSearchEnd, onVolume, trackIndex] = useAudio(url);\n\n  const minSec = secs => {\n    const minutes = Math.floor(secs / 60);\n    const returnMin = minutes < 10 ? `0${minutes}` : minutes;\n    const seconds = Math.floor(secs % 60);\n    const returnSec = seconds < 10 ? `0${seconds}` : seconds;\n    return `${returnMin}:${returnSec}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      style: {\n        width: \"300px\",\n        justifyContent: \"start\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"cover\",\n        src: resolveLink(JSON.parse(url[trackIndex].metadata).image),\n        alt: \"currentCover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"songTitle\",\n          children: JSON.parse(url[trackIndex].metadata).name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"songAlbum\",\n          children: url[trackIndex].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(StepBackwardOutlined, {\n          className: \"forback\",\n          onClick: toPrevTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), playing ? /*#__PURE__*/_jsxDEV(PauseCircleFilled, {\n          className: \"pauseplay\",\n          onClick: toggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(PlayCircleFilled, {\n          className: \"pauseplay\",\n          onClick: toggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(StepForwardOutlined, {\n          className: \"forback\",\n          onClick: toNextTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [minSec(trackProgress), /*#__PURE__*/_jsxDEV(Slider, {\n          value: trackProgress,\n          step: 1,\n          min: 0,\n          max: duration ? duration : 0,\n          className: \"progress\",\n          tooltipVisible: false,\n          onChange: value => onSearch(value),\n          onAfterChange: onSearchEnd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), duration ? minSec(Math.round(duration)) : \"00:00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"soundDiv\",\n      children: [/*#__PURE__*/_jsxDEV(SoundOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        className: \"volume\",\n        defaultValue: 100,\n        tooltipVisible: false,\n        onChange: value => onVolume(value / 100)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Player, \"EjGVkWEgo5ZCQHznHC/1s/dWHVQ=\", false, function () {\n  return [useIPFS, useAudio];\n});\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/stephanemasyn/Desktop/FinTech/GitHub/Spotfy_type/src/components/AudioPlayer.js"],"names":["useAudio","Slider","useIPFS","SoundOutlined","StepBackwardOutlined","StepForwardOutlined","PlayCircleFilled","PauseCircleFilled","Player","url","resolveLink","playing","duration","toggle","toNextTrack","toPrevTrack","trackProgress","onSearch","onSearchEnd","onVolume","trackIndex","minSec","secs","minutes","Math","floor","returnMin","seconds","returnSec","width","justifyContent","JSON","parse","metadata","image","name","value","round"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,mBAArB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAO,mBAAP;AACA,SAASC,aAAT,EAAwBC,oBAAxB,EAA8CC,mBAA9C,EAAmEC,gBAAnE,EAAqFC,iBAArF,QAA8G,mBAA9G;;;;AAGA,MAAMC,MAAM,GAAG,QAAa;AAAA;;AAAA,MAAZ;AAAEC,IAAAA;AAAF,GAAY;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAkBR,OAAO,EAA/B;AACA,QAAM,CACFS,OADE,EAEFC,QAFE,EAGFC,MAHE,EAIFC,WAJE,EAKFC,WALE,EAMFC,aANE,EAOFC,QAPE,EAQFC,WARE,EASFC,QATE,EAUFC,UAVE,IAWFpB,QAAQ,CAACS,GAAD,CAXZ;;AAcA,QAAMY,MAAM,GAAIC,IAAD,IAAU;AACrB,UAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAG,EAAlB,CAAhB;AACA,UAAMI,SAAS,GAAGH,OAAO,GAAG,EAAV,GAAgB,IAAGA,OAAQ,EAA3B,GAA+BA,OAAjD;AACA,UAAMI,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAG,EAAlB,CAAhB;AACA,UAAMM,SAAS,GAAGD,OAAO,GAAG,EAAV,GAAgB,IAAGA,OAAQ,EAA3B,GAA+BA,OAAjD;AAEA,WAAQ,GAAED,SAAU,IAAGE,SAAU,EAAjC;AACH,GAPD;;AASA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,cAAc,EAAE;AAAlC,OAAhC;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAuB,QAAA,GAAG,EAAEpB,WAAW,CAACqB,IAAI,CAACC,KAAL,CAAWvB,GAAG,CAACW,UAAD,CAAH,CAAgBa,QAA3B,EAAqCC,KAAtC,CAAvC;AAAqF,QAAA,GAAG,EAAC;AAAzF;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,oBAA4BH,IAAI,CAACC,KAAL,CAAWvB,GAAG,CAACW,UAAD,CAAH,CAAgBa,QAA3B,EAAqCE;AAAjE;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,oBAA4B1B,GAAG,CAACW,UAAD,CAAH,CAAgBe;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI,QAAC,oBAAD;AAAsB,UAAA,SAAS,EAAC,SAAhC;AAA0C,UAAA,OAAO,EAAEpB;AAAnD;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKJ,OAAO,gBACJ,QAAC,iBAAD;AAAmB,UAAA,SAAS,EAAC,WAA7B;AAAyC,UAAA,OAAO,EAAEE;AAAlD;AAAA;AAAA;AAAA;AAAA,gBADI,gBAEJ,QAAC,gBAAD;AAAkB,UAAA,SAAS,EAAC,WAA5B;AAAwC,UAAA,OAAO,EAAEA;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAJR,eAMI,QAAC,mBAAD;AAAqB,UAAA,SAAS,EAAC,SAA/B;AAAyC,UAAA,OAAO,EAAEC;AAAlD;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,mBACKO,MAAM,CAACL,aAAD,CADX,eAEI,QAAC,MAAD;AACI,UAAA,KAAK,EAAEA,aADX;AAEI,UAAA,IAAI,EAAE,CAFV;AAGI,UAAA,GAAG,EAAE,CAHT;AAII,UAAA,GAAG,EAAEJ,QAAQ,GAAGA,QAAH,GAAc,CAJ/B;AAKI,UAAA,SAAS,EAAC,UALd;AAMI,UAAA,cAAc,EAAE,KANpB;AAOI,UAAA,QAAQ,EAAGwB,KAAD,IAAWnB,QAAQ,CAACmB,KAAD,CAPjC;AAQI,UAAA,aAAa,EAAElB;AARnB;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAYKN,QAAQ,GAAGS,MAAM,CAACG,IAAI,CAACa,KAAL,CAAWzB,QAAX,CAAD,CAAT,GAAkC,OAZ/C;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eAgCI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AACI,QAAA,SAAS,EAAC,QADd;AAEI,QAAA,YAAY,EAAE,GAFlB;AAGI,QAAA,cAAc,EAAE,KAHpB;AAII,QAAA,QAAQ,EAAGwB,KAAD,IAAWjB,QAAQ,CAACiB,KAAK,GAAG,GAAT;AAJjC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAhCJ;AAAA,kBADJ;AA4CH,CArED;;GAAM5B,M;UACsBN,O,EAYpBF,Q;;;KAbFQ,M;AAuEN,eAAeA,MAAf","sourcesContent":["import useAudio from \"../hooks/useAudio\";\nimport { Slider } from \"antd\";\nimport { useIPFS } from \"../hooks/useIPFS\";\nimport \"./AudioPlayer.css\";\nimport { SoundOutlined, StepBackwardOutlined, StepForwardOutlined, PlayCircleFilled, PauseCircleFilled } from \"@ant-design/icons\";\n\n\nconst Player = ({ url }) => {\n    const { resolveLink } = useIPFS();\n    const [\n        playing,\n        duration,\n        toggle,\n        toNextTrack,\n        toPrevTrack,\n        trackProgress,\n        onSearch,\n        onSearchEnd,\n        onVolume,\n        trackIndex\n    ] = useAudio(url);\n\n\n    const minSec = (secs) => {\n        const minutes = Math.floor(secs / 60);\n        const returnMin = minutes < 10 ? `0${minutes}` : minutes;\n        const seconds = Math.floor(secs % 60);\n        const returnSec = seconds < 10 ? `0${seconds}` : seconds;\n\n        return `${returnMin}:${returnSec}`;\n    };\n\n    return (\n        <>\n            <div className=\"buttons\" style={{ width: \"300px\", justifyContent: \"start\" }}>\n                <img className=\"cover\" src={resolveLink(JSON.parse(url[trackIndex].metadata).image)} alt=\"currentCover\" />\n                <div>\n                    <div className=\"songTitle\">{JSON.parse(url[trackIndex].metadata).name}</div>\n                    <div className=\"songAlbum\">{url[trackIndex].name}</div>\n                </div>\n            </div>\n            <div>\n                <div className=\"buttons\">\n                    <StepBackwardOutlined className=\"forback\" onClick={toPrevTrack} />\n                    {playing ?\n                        <PauseCircleFilled className=\"pauseplay\" onClick={toggle} /> :\n                        <PlayCircleFilled className=\"pauseplay\" onClick={toggle} />\n                    }\n                    <StepForwardOutlined className=\"forback\" onClick={toNextTrack} />\n                </div>\n                <div className=\"buttons\">\n                    {minSec(trackProgress)}\n                    <Slider\n                        value={trackProgress}\n                        step={1}\n                        min={0}\n                        max={duration ? duration : 0}\n                        className=\"progress\"\n                        tooltipVisible={false}\n                        onChange={(value) => onSearch(value)}\n                        onAfterChange={onSearchEnd}\n                    />\n                    {duration ? minSec(Math.round(duration)) : \"00:00\"}\n                </div>\n            </div>\n            <div className=\"soundDiv\">\n                <SoundOutlined />\n                <Slider\n                    className=\"volume\"\n                    defaultValue={100}\n                    tooltipVisible={false}\n                    onChange={(value) => onVolume(value / 100)}\n                />\n            </div>\n        </>\n    );\n};\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}